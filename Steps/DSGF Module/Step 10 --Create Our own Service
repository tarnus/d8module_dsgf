// Step 10 Create our own service
//create file src/dsgfService.php
/**
**  This Service Container is a global object that is created and contained by the Kernel before a request is handled.
**  It can be used later in code to fetch services, lazy-loaded on the fly. Services are global objects that can be used to fulfil
**  specific tasks, such as a Mailer service, or a database connector. A service corresponds to exactly one class. The service container
**  is very important as it contains the available services, knows about their relations and configurations, and even constructs them!
*/
<?php

/**
 * @file
 * Contains \Drupal\dsgf\dsgfservice.
 */

namespace Drupal\dsgf;

class dsgfService {
  public function getTagline() {
    return t('My First Service!!');
  }
}

//Create dsgf.services.yml  hook up and register service

services:
  dsgf.dsgfservice:
    class: Drupal\dsgf\dsgfService


// edit controller
<?php
namespace Drupal\dsgf\Controller;
use Drupal\Core\Controller\ControllerBase;

class dsgfController extends ControllerBase{

  public function helloworld($to, $from){
    $message = $this->config('dsgf.settings')->get('default_text');
    //$message=$this->t("Hello World I am here");

    $account = \Drupal::currentUser();  // another way is \Drupal::service('current_user');
    $name= $account->getUsername();

    $query= \Drupal::entityQuery('node')
        ->condition('status' , 1);
    $email = \Drupal::config('system.site')->get('mail');
    $nids = $query->execute();

    $node = entity_load('node', $nids[1]);
    $title=$node->title->value;
    kint($title);

    $dsgfservice = \Drupal::service('dsgf.dsgfservice');
    $tagline = $dsgfservice->getTagline();


    return [
      '#theme' => 'hello_page',
      '#message' => $message,
      '#to' => $to,
      '#from' => $from,
      '#name' => $name,
      '#mytitle'=>$title,
      '#tagline'=>$tagline,
    ];
  }

}

// Add tagline to hook_theme
<?php
/**
 * * @file
 * Code for dsgf module
 */
function dsgf_theme(){
  $theme['hello_page']=[
    'variables' => ['message' => NULL,'from' => NULL, 'to'=>NULL, 'name'=>NULL,'mytitle'=>NULL,'tagline'=>NULL],
    'template' => 'hello_page',
  ];
  $theme['hello_block']=[
    'variables' => ['message' => NULL],
    'template' => 'hello_block',
  ];
  return $theme;
}

// Add variable to our template file hello_page.html.twig
<h1>{{ mytitle }}</h1>
<h2>{{ tagline }}</h2>
<section>
    {% trans %}
    <p>Welcome {{ name }},</p>
    <p><strong>Hey {{ from }}, What is the message??</strong></p>
    <p>{{ to }} : <stong>{{ message }}</stong> </p>
    {% endtrans %}
</section>
